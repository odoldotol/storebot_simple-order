v1 애서 유저에게 결제까지의 한단계 상호작용을 줄인 버전
실재 점원에게 주문하는것처럼, 메뉴 말하고 바로 주문할게요 하고 결제가능

주문서 확인은 주문 시나리오와 별개의 옵셔널 시나리오로 분리




*메뉴 수정시마다도 PlacementSession 감지해서 필요시 기존 결제중인것 날려버리는 작업이 필요함



### OrderSession
유저id-주문서객체
유저가 구성한 주문서
ttl 있음 (30분?)
주문서세션객체는 id(OrderSessionId) 를 가지며 id 는 세션생성타임스템프와 버전(수정카운터) 으로 구성
세션을 수정할떄마다 버전이 올라가며 ttl 도 갱신

### PlacementSession
유저id-Placement객체(OrderSessionId, 주문id)
유저가 주문중인지
ttl 은 결제 타임아웃 고려 (15분?)

### PaymentSession
주문id-Placement객체(OrderSessionId, tid, redirect, PaymentToken)
주문이 결제중인지
ttl 은 결제 타임아웃 고려 (15분?)

### PaymentTokenUserId
PaymentToken-유저id



# /kakao-chatbot-skill/order/place
OrderSession 읽기 (없으면 없음응답, 에러시 실패응답)
- OrderSession ttl 갱신 (에러시 로깅)
  매장상태 오픈인지 확인 (에러시, 오픈아닐시 실패응답)

  - PlacementSession 팬딩이면 *주문중주문처리
    없으면,
    ...(1)... [start orderPlacementSession]
    주문id 생성(uuid v7) (에러시 실패응답)
    OrderSessionId 읽기 (없으면 없음응답, 에러시 실패응답)
    - PlacementSession Set (에러시 실패응답)

      - OrderSession, PlacementSession 의 OrderSessionId 일치하는지 확인 (일치하지 않으면 실패응답)

        [start orderPaymentSession]
        PaymentToken 생성
        PaymentTokenUserId 생성 (중복시 재시도, 에러시 실패응답)
        - kakaopay *결제준비요청 (에러시, 실패응답시 실패응답)
          - PaymentSession 생성 (중복 또는 에러시 카카오페이 취소요청하고 실패응답)

            - 주문서 응답(OrderSession) 만들고 결제버튼(redirect_url)포함해서 응답


### 주문중주문처리
PlacementSession 읽기 (에러시 실패응답)
- PlacementSession 의 order_id 로 PaymentSession 읽기 (에러시 실패응답, 없을시 (1) 으로 가기)
  - OrderSessionId 가 PlacementSession, OrderSession, PaymentSession 에서 같으면 재응답
    다르먼,
    [destroy OrderPaymentSession]
    [
      PaymentSession 에서 tid 읽어서 카카오페이 취소요청하기 (에러시 로깅 ...치명적인데?)
      PaymentSession 제거 (에러시 로깅)
      PaymentTokenUserId 제거 (에러시 로깅)
    ]

    - (1) 으로 가기

### 결제준비요청 바디에는 다음 3가지 URL이 포함
approval_url: "/order/placement/approval/kakaopay/<PaymentToken>", (<PaymentToken> 는 user_id 를 가리킴)
cancel_url: "/order/placement/cancel/kakaopay/<PaymentToken>",
fail_url: "/order/placement/fail/kakaopay/<PaymentToken>",




유저는 OrderSession 을 확인하고 결제하기 버튼을 클릭해서 결제인증 수행에 따라 approval(pg_token 포함), cancel, fail 요청 발생
*pg_token 이 파라미터로 전달되는지 쿼리스트링으로 전달되는지 확인 필요(문서마다 다르게 설명됨)




# /order/placement/approval/kakaopay/<PaymentToken>[/<pg_token>]|[?pg_token=<pg_token>]
PaymentTokenUserId 읽고 삭제(GETDEL) (에러시 실패응답)
[
  OrderSession 읽기
  PlacementSession 읽기
] (둘중 하나라도 없거나 에러시 *실패처리후 실패응답)
- 매장상태 오픈인지 확인 (에러시, 오픈아닐시 실패응답)
  - PaymentSession 읽기 (없거나 에러시 실패처리후 실패응답)
    - OrderSessionId 모두 일치하는지 확인 (일치하지않으면 실패처리후 실패응답)
      rxjs Subject 만들고 orderId-Subject 맵에 추가하기 (중복인경우 기존 Subject.error 호출하고 새 Subject 덮기)
      Subject 을 통해 응답 체이닝하기 (컨트롤러 매서드에서 lastValueFrom 으로 프로미스 리턴하거나 직접 구독해서 처리하거나)
      결제승인스트림 메세지(pg_token, tid 등 결제정보 및 모든 세션정보 포함) 푸시 (에러시 *Subject에러처리)
      - OrderSession 제거 (에러시 로깅)
        PlacementSession 제거 (에러시 로깅)
        PaymentSession 제거 (에러시 로깅)


### 실패처리
kakaopay 주문상태조회 및 취소처리 (에러시 로깅)
PlacementSession 제거 (에러시 로깅)
PaymentSession 제거 (에러시 로깅)
실패알럿 보내기

### Subject에러처리
*실패처리
userId-Subject 맵에서 userId로 Subject 찾기 (없으면 noob)
맵에서 Subject 제거
Subject.error 처리


# /order/placement/kakaopay/cancel/<PaymentToken>
# /order/placement/kakaopay/fail/<PaymentToken>
PaymentTokenUserId 읽고 삭제(GETDEL) (에러시 실패응답)
- PlacementSession 제거 (에러시 로깅)
  - PaymentSession 제거 (에러시 로깅)
    - 응답



# 결제승인스트림 구독자가 메시지 수신
메세지로 kakaopay 결제 승인요청하기 (이미 승인된 경우 성공간주, 승인실패/에러시 *주문실패처리) (재시도로직?)
- Order 어그리거트 생성하기 <PostgresTX> (이미 생성되어있을경우 성공간주, 에러시 주문실패처리)
  - 스트림 캐시에 주문서id 중복유무 확인후 없으면 스트림에 추가하고 주문서id-스트림key/id 캐싱하기 (중복일시 성공, 추가 실패시 주문실패처리, 캐싱에러시 로깅) (캐싱 실패하고 메시지 재처리되어서 스트림 중복 추가되어도 괜찮음. store client 애서 메시지 받을때 중복은 처리 않함. 이 문제 발견시 캐싱 보정 로직이 필요할까?)
    - UserRecentOrder 캐싱하기 (에러시 로깅)
      *Subject완료처리 (에러시 로깅)
      주문성공 알럿 보내기 (에러시 로깅)
      - 메시지 성공처리하기


### 주문실패처리
kakaopay 결제 취소
- Order 어그리거트 없으면 패스, 있으면 결제 취소정보 업데이트 <PostgresTX>
  - userId-Subject 맵에서 userId로 Subject 찾기 (없으면 noob)
    맵에서 제거하기
    Subject.error 처리
    주문실패 알럿 보내기 (에러시 로깅)
    - 메시지 성공처리하기

### Subject완료처리
userId-Subject 맵에서 userId로 Subject 찾기 (없으면 noob)
맵에서 제거하기
Subject.next/complete 처리