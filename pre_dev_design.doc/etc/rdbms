# MySQL vs Postgres

정보도 많고 책도 하나 가지고 있고 개발이 더 쉬운 MySQL 쪽으로 가고싶은데
PFA 배포환경의 RDS 를 함께 사용해야해서 기존 PFA 의 Postgres 를 MySQL 로 이관할지 고민.

=> 그냥 Postgres 를 사용

이슈

- 쓰기 성능
주문/결제 등 에서 핵심은 쓰기작업임, Postgres 가 유리?
주문, 결제할때 생성 업데이트, 메뉴 등 복잡한 관계, 인덱스 레코드 생성 업데이트
특히 주문결제 에서 주문서 레코드 생성 미리 하는 부분 생각해보면?
그런데 상관없나? 주문서의 쓰기와 읽기는 거의 분리되어있음(도매인 특성상 주문할때 쓴 다음 수정은 없음, 시스템적으로도 분리 디자인함)



- 읽기 성능
Order, Menu, Accounting 등의 읽기 에서 MySQL 이 유리할까?
Menu 는 상관없음.
Accounting 은 상관있지만 점포만 보는거니 크리티컬하지는 않음
Order 읽기가 핵심인데,,,
결제/주문이 완료 된 이후에는 수정,삭제가 거의 없기때문에(취소때는 수정필요)
주문/결제(쓰기,업데이트)가 다 끝나기 전에는 다른곳에서 읽고 다 끝난 다음에 db 애서 읽도록 디자인하면
Postgres 의 인덱스온니스캔 가능 유무도 안정적이게 가져갈 수 있을것 같고?



- PK, 인덱스 정렬
uuid 랜덤성떄문에 고민
MySQL 의 클러스터링 인덱스에서는 쓰기저하 심할것임.
그렇다고 Postgres 에서 pk 를 랜덤하게 만들면 여기도 성능저하는 있음.

v7 같은 정렬성이 보장된 uuid 를 사용하는 방법도 있음.
uuid v7 는 Postgres 16 부터 지원함. (현 AWS RDS Posgres 버전은 15, 업그레이드 가능)
uuid 생성을 DBMS 내부에서 하기보단 앱에서 관리해야 할 수도 있음.

Postgres 에서는
단순하게 uuid 랜덤성때문에 무조건 느려서 손해라고 생각하기엔 무리가 있어보임.
스키마를 설계하고 실 사용때 어떻게 쓰고 읽을지 디자인 어느정도 하고나서
인덱스도 어느정도 설계하고 나서
복합적으로 판단해야지 의미가 있음. 실재 얼마나 크리티컬할지, 거의 상관 없을수도 있을것같음.
어차피 인덱스 정렬은 해야함.

MySQL 은 클러스터링인덱스 때문에 기본적으로 pk 가 정렬성을 가지는게 거의 항상 커다란 이점을 가져올것같음.








=>
결국 기존 PFA 배포환경에 모놀리틱하게 개발하는 경우 리소스 생각하면 RDS Postgres 를 같이 쓰는게 좋고
Postgres 라고 해서 손해보다는 잘 설계하면 이득만 있을거다. 클러스터링 인덱스를 벗어나서 쓰기 성능 상승을 노릴 수 있고
논리에 맞게 PK 와 인덱스를 설계하면 읽기성능도 문제 없을거고
시리얼라이즈 가 필요한 정산같은 부분도 이미 정산에 들어가는 주문 및 결제 정보들은 추가적인 쓰기나 수정이 없는 상태에서 일어날 거고
조회는 동시에 있을 수 있는데 이때는 MySQL 의 시리얼라이즈보다 Postgres 의 시리얼라이즈가 더 빠를거다.



